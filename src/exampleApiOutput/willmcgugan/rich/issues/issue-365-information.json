{"url":"https://api.github.com/repos/willmcgugan/rich/issues/365","repository_url":"https://api.github.com/repos/willmcgugan/rich","labels_url":"https://api.github.com/repos/willmcgugan/rich/issues/365/labels{/name}","comments_url":"https://api.github.com/repos/willmcgugan/rich/issues/365/comments","events_url":"https://api.github.com/repos/willmcgugan/rich/issues/365/events","html_url":"https://github.com/willmcgugan/rich/pull/365","id":717245592,"node_id":"MDExOlB1bGxSZXF1ZXN0NDk5ODQwNjEw","number":365,"title":"Additional tests for `measure.py`, `table.py`, `padding.py` and `containers.py`, as well as some possible code fixes","user":{"login":"evantkchong","id":40609285,"node_id":"MDQ6VXNlcjQwNjA5Mjg1","avatar_url":"https://avatars3.githubusercontent.com/u/40609285?v=4","gravatar_id":"","url":"https://api.github.com/users/evantkchong","html_url":"https://github.com/evantkchong","followers_url":"https://api.github.com/users/evantkchong/followers","following_url":"https://api.github.com/users/evantkchong/following{/other_user}","gists_url":"https://api.github.com/users/evantkchong/gists{/gist_id}","starred_url":"https://api.github.com/users/evantkchong/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/evantkchong/subscriptions","organizations_url":"https://api.github.com/users/evantkchong/orgs","repos_url":"https://api.github.com/users/evantkchong/repos","events_url":"https://api.github.com/users/evantkchong/events{/privacy}","received_events_url":"https://api.github.com/users/evantkchong/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2020-10-08T11:06:59Z","updated_at":"2020-10-11T17:40:31Z","closed_at":"2020-10-11T15:36:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/willmcgugan/rich/pulls/365","html_url":"https://github.com/willmcgugan/rich/pull/365","diff_url":"https://github.com/willmcgugan/rich/pull/365.diff","patch_url":"https://github.com/willmcgugan/rich/pull/365.patch"},"body":"## Type of changes\r\n\r\n- [x] Bug fix (See description under `table.py` and `containers.py`)\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [x] Tests\r\n- [ ] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [x] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nSome additional tests in response to #37 for the following files:\r\n* `measure.py`\r\n    * `test_null_get`: Checks for cases where `Measurement.get()` should return `Measurement(0, 0)`\r\n    * `test_measure_renderables`: Tests that `measure_renderables` returns the correct `Measurement` object \r\n* `table.py`\r\n    * `test_append_column`: Checks whether headers are correctly added to `self.columns` in `Table`. I'm not too sure if this test is meaningful enough though.\r\n    * `test_rich_measure`: Checks whether the `__rich_measure__` method of `Table` returns the correct `Measurement` object for several cases\r\n    * Tried to add a test for lines 496-497, however I can't engineer a case where the code in `try` would raise a `ValueError`:\r\n        ```python\r\n        try:\r\n            second_max_column = max(\r\n                width if allow_wrap and width != max_column else 0\r\n                for width, allow_wrap in zip(widths, wrapable)\r\n            )\r\n        except ValueError:\r\n            second_max_column = 0\r\n        ```\r\n        Afaik, a `ValueError` would only be thrown by `max()` in a situation where an empty sequence is passed to it. But for us to get to the `try/except`, both `widths` and `wrapable` would have to be valid, which would in turn generate valid arguments for the `max()` function. Because of this, I'm not convinced a `try/except` for a `ValueError` is necessary in the function and hence removed it from the method..\r\n* `padding.py`\r\n    * `test_indent`: Tests the `indent` method of `Padding`. Also not sure if this test is meaningful enough.\r\n    * `test_rich_console`: Tests the output of the `__rich_console__` method\r\n* `containers.py`\r\n    * `test_lines_justify` Tests the outputs of the `justify` method for `Lines`\r\n    * It seems the `if next_word is None:` condition in line 156 of `conatiners.py` will never be triggered as `next_word` will only be `None` if `index == len(spaces)`, however the preceeding `if index < len(spaces):`  skips the execution of the `if next_word is None:` condition.\r\n    ```python\r\n    if index < len(spaces): \r\n            if next_word is None: # Only occurs if index==len(spaces)?\r\n                space_style = Style.null()\r\n            else:\r\n                style = word.get_style_at_offset(console, -1)\r\n                next_style = next_word.get_style_at_offset(console, 0)\r\n                space_style = style if style == next_style else line.style\r\n    ```\r\n    Propose removing the if/else like so and have made a corresponding change in the PR:\r\n    ```python\r\n    if index < len(spaces): \r\n            style = word.get_style_at_offset(console, -1)\r\n            next_style = next_word.get_style_at_offset(console, 0)\r\n            space_style = style if style == next_style else line.style\r\n    ```\r\nLooking forward to your feedback!","closed_by":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}