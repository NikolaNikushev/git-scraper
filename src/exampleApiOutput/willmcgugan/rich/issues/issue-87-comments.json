[{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/633029037","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-633029037","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":633029037,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMzAyOTAzNw==","user":{"login":"eulertour","id":43117506,"node_id":"MDQ6VXNlcjQzMTE3NTA2","avatar_url":"https://avatars1.githubusercontent.com/u/43117506?v=4","gravatar_id":"","url":"https://api.github.com/users/eulertour","html_url":"https://github.com/eulertour","followers_url":"https://api.github.com/users/eulertour/followers","following_url":"https://api.github.com/users/eulertour/following{/other_user}","gists_url":"https://api.github.com/users/eulertour/gists{/gist_id}","starred_url":"https://api.github.com/users/eulertour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eulertour/subscriptions","organizations_url":"https://api.github.com/users/eulertour/orgs","repos_url":"https://api.github.com/users/eulertour/repos","events_url":"https://api.github.com/users/eulertour/events{/privacy}","received_events_url":"https://api.github.com/users/eulertour/received_events","type":"User","site_admin":false},"created_at":"2020-05-23T11:12:40Z","updated_at":"2020-05-23T11:12:40Z","author_association":"NONE","body":"I noticed that this would require the logger to have access to the Progress containing the task and managed to hack together this solution:\r\n\r\n```python\r\nimport logging\r\nfrom rich.logging import RichHandler\r\nfrom rich.progress import Progress\r\n\r\nglobal_progress = None\r\n\r\nclass GlobalProgress(Progress):\r\n    def __enter__(self):\r\n        global global_progress\r\n        global_progress = self\r\n        return super().__enter__()\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        global global_progress\r\n        super().__exit__(exc_type, exc_val, exc_tb)\r\n        global_progress = None\r\n\r\nclass GlobalProgressRichHandler(RichHandler):\r\n    def emit(self, record):\r\n        if global_progress is not None:\r\n            console = global_progress.console\r\n            live_render = global_progress._live_render\r\n            if console.is_terminal:\r\n                console.print(live_render.position_cursor())\r\n            super().emit(record)\r\n            if console.is_terminal:\r\n                console.print(live_render)\r\n        else:\r\n            super().emit(record)\r\n\r\nlogging.basicConfig(\r\n    level=\"NOTSET\",\r\n    format=\"%(message)s\",\r\n    datefmt=\"[%X]\",\r\n    handlers=[GlobalProgressRichHandler()]\r\n)\r\n\r\nlogger = logging.getLogger(\"rich\")\r\n```\r\n\r\nThe GlobalProgress is then used as follows:\r\n```python\r\nwith GlobalProgress() as progress:\r\n    # Logs handled by a GlobalProgressRichHandler inside this block won't break the\r\n    # progress bar output.\r\n    task = progress.add_task(\"example task\")\r\n    progress.update(task, advance=1)\r\n```\r\n\r\nAre there any problems with this I'm missing, or is there an easier way to do it?","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/633080567","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-633080567","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":633080567,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMzA4MDU2Nw==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-05-23T15:49:29Z","updated_at":"2020-05-23T15:49:29Z","author_association":"OWNER","body":"There isn't any trivial way of doing that. But I do agree it would be nice to have.\r\n\r\nYour solution is probably good and quite clever. Only thing I would suggest is using the console object as a context manager, which ensures that the update is written in a single write operation -- which reduces flicker.\r\n\r\nIdeally if the logging handler and the progress display share the same Console instance it should just work. I'll have a think about how to accomplish that.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/633147716","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-633147716","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":633147716,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMzE0NzcxNg==","user":{"login":"eulertour","id":43117506,"node_id":"MDQ6VXNlcjQzMTE3NTA2","avatar_url":"https://avatars1.githubusercontent.com/u/43117506?v=4","gravatar_id":"","url":"https://api.github.com/users/eulertour","html_url":"https://github.com/eulertour","followers_url":"https://api.github.com/users/eulertour/followers","following_url":"https://api.github.com/users/eulertour/following{/other_user}","gists_url":"https://api.github.com/users/eulertour/gists{/gist_id}","starred_url":"https://api.github.com/users/eulertour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eulertour/subscriptions","organizations_url":"https://api.github.com/users/eulertour/orgs","repos_url":"https://api.github.com/users/eulertour/repos","events_url":"https://api.github.com/users/eulertour/events{/privacy}","received_events_url":"https://api.github.com/users/eulertour/received_events","type":"User","site_admin":false},"created_at":"2020-05-23T22:17:41Z","updated_at":"2020-05-23T22:17:41Z","author_association":"NONE","body":"> Only thing I would suggest is using the console object as a context manager, which ensures that the update is written in a single write operation\r\n\r\nI tried this and it actually caused the logs to break the progress bar output again. I looked into it for a while but the code is pretty complicated.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/633150022","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-633150022","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":633150022,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMzE1MDAyMg==","user":{"login":"eulertour","id":43117506,"node_id":"MDQ6VXNlcjQzMTE3NTA2","avatar_url":"https://avatars1.githubusercontent.com/u/43117506?v=4","gravatar_id":"","url":"https://api.github.com/users/eulertour","html_url":"https://github.com/eulertour","followers_url":"https://api.github.com/users/eulertour/followers","following_url":"https://api.github.com/users/eulertour/following{/other_user}","gists_url":"https://api.github.com/users/eulertour/gists{/gist_id}","starred_url":"https://api.github.com/users/eulertour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eulertour/subscriptions","organizations_url":"https://api.github.com/users/eulertour/orgs","repos_url":"https://api.github.com/users/eulertour/repos","events_url":"https://api.github.com/users/eulertour/events{/privacy}","received_events_url":"https://api.github.com/users/eulertour/received_events","type":"User","site_admin":false},"created_at":"2020-05-23T22:45:12Z","updated_at":"2020-05-23T22:46:23Z","author_association":"NONE","body":"If it's at all useful, using the console as a context manager no longer breaks the output if I comment out these two lines:\r\nhttps://github.com/willmcgugan/rich/blob/55988c6e721cc03ab4f6dc6aeca3089e7c5c13ae/rich/console.py#L329\r\nhttps://github.com/willmcgugan/rich/blob/55988c6e721cc03ab4f6dc6aeca3089e7c5c13ae/rich/console.py#L333\r\nbut I assume that's the same as not using at all?","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/633166746","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-633166746","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":633166746,"node_id":"MDEyOklzc3VlQ29tbWVudDYzMzE2Njc0Ng==","user":{"login":"eulertour","id":43117506,"node_id":"MDQ6VXNlcjQzMTE3NTA2","avatar_url":"https://avatars1.githubusercontent.com/u/43117506?v=4","gravatar_id":"","url":"https://api.github.com/users/eulertour","html_url":"https://github.com/eulertour","followers_url":"https://api.github.com/users/eulertour/followers","following_url":"https://api.github.com/users/eulertour/following{/other_user}","gists_url":"https://api.github.com/users/eulertour/gists{/gist_id}","starred_url":"https://api.github.com/users/eulertour/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eulertour/subscriptions","organizations_url":"https://api.github.com/users/eulertour/orgs","repos_url":"https://api.github.com/users/eulertour/repos","events_url":"https://api.github.com/users/eulertour/events{/privacy}","received_events_url":"https://api.github.com/users/eulertour/received_events","type":"User","site_admin":false},"created_at":"2020-05-24T02:15:56Z","updated_at":"2020-05-24T02:15:56Z","author_association":"NONE","body":"Thanks for the hint, I was able to solve the problem by modifying the GlobalProgressRichHandler to use the same Console instance as the GlobalProgress:\r\n```python\r\nclass GlobalProgressRichHandler(RichHandler):\r\n    \"\"\"\r\n    A RichHandler which checks a global variable for a GlobalProgress and logs\r\n    without breaking its output if one is set.\r\n    \"\"\"\r\n    def emit(self, record):\r\n        if global_progress is not None:\r\n            # Save this RichHandler's original Console and use the one from the\r\n            # GlobalProgress.\r\n            console = global_progress.console\r\n            self.saved_console = self.console\r\n            self.console = console\r\n\r\n            # Log without breaking the GlobalProgress output.\r\n            live_render = global_progress._live_render\r\n            with console:\r\n                if console.is_terminal:\r\n                    console.print(live_render.position_cursor())\r\n                super().emit(record)\r\n                if console.is_terminal:\r\n                    console.print(live_render)\r\n\r\n            # Restore the original Console.\r\n            self.console = self.saved_console\r\n        else:\r\n            super().emit(record)\r\n```\r\n\r\nIf you ever end up adding this to the repo it'd be helpful to allow passing an external Console to RichHandler.emit() to avoid the all the saving and restoring happening here.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/642549132","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-642549132","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":642549132,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjU0OTEzMg==","user":{"login":"calve","id":4311079,"node_id":"MDQ6VXNlcjQzMTEwNzk=","avatar_url":"https://avatars2.githubusercontent.com/u/4311079?v=4","gravatar_id":"","url":"https://api.github.com/users/calve","html_url":"https://github.com/calve","followers_url":"https://api.github.com/users/calve/followers","following_url":"https://api.github.com/users/calve/following{/other_user}","gists_url":"https://api.github.com/users/calve/gists{/gist_id}","starred_url":"https://api.github.com/users/calve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calve/subscriptions","organizations_url":"https://api.github.com/users/calve/orgs","repos_url":"https://api.github.com/users/calve/repos","events_url":"https://api.github.com/users/calve/events{/privacy}","received_events_url":"https://api.github.com/users/calve/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T10:08:42Z","updated_at":"2020-06-11T10:08:42Z","author_association":"CONTRIBUTOR","body":"Hi there, \r\n\r\ni'm having a bit of success to intercept `print()` calls with the following implementation\r\n\r\n```python\r\nfrom contextlib import redirect_stdout\r\n\r\ndef do_stuff():\r\n    print(\"some function doing and printing stuffs as usual\")\r\n\r\nwith Progress() as progress:\r\n\r\n    class printToProgress():\r\n        def write(self, msg, *args, **kwargs):\r\n            if msg != '\\n' and msg != '':\r\n                progress.log(msg, *args, **kwargs)\r\n\r\n        def flush(self, *args, **kwargs):\r\n            pass\r\n\r\n    with redirect_stdout(printToProgress()):\r\n        do_stuff()\r\n```\r\n\r\nalbeit not perfect in my setup which involve threads and partials.\r\n\r\nHope this help a lost soul, I'm sure we can improve this.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/642558021","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-642558021","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":642558021,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjU1ODAyMQ==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T10:28:24Z","updated_at":"2020-06-11T10:28:24Z","author_association":"OWNER","body":"@calve redirecting stout is a good idea. Might also be useful if you don't have control over what does the printing.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/642582579","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-642582579","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":642582579,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjU4MjU3OQ==","user":{"login":"calve","id":4311079,"node_id":"MDQ6VXNlcjQzMTEwNzk=","avatar_url":"https://avatars2.githubusercontent.com/u/4311079?v=4","gravatar_id":"","url":"https://api.github.com/users/calve","html_url":"https://github.com/calve","followers_url":"https://api.github.com/users/calve/followers","following_url":"https://api.github.com/users/calve/following{/other_user}","gists_url":"https://api.github.com/users/calve/gists{/gist_id}","starred_url":"https://api.github.com/users/calve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calve/subscriptions","organizations_url":"https://api.github.com/users/calve/orgs","repos_url":"https://api.github.com/users/calve/repos","events_url":"https://api.github.com/users/calve/events{/privacy}","received_events_url":"https://api.github.com/users/calve/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T11:27:41Z","updated_at":"2020-06-11T11:27:41Z","author_association":"CONTRIBUTOR","body":"@willmcgugan May I suggest to implement some `capture_stdout` and `capture_stderr` arguments to the `Progress()` class, so we could write something along the lines\r\n\r\n```python\r\nwith Progress(capture_stdout=True) as progress:\r\n    print(\"our vanilla stdlib print() but echoing should be handled nicely by rich.Progress\")\r\n```\r\n\r\n? I can try to provide a PR.\r\n\r\nOn the other hand I'm not sure if this would play nicely with `logging`. I guess a `capture_logging` argument would be awesome (:","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/642608597","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-642608597","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":642608597,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MjYwODU5Nw==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-06-11T12:21:41Z","updated_at":"2020-06-11T12:21:41Z","author_association":"OWNER","body":"It's not a bad idea, but let me think about that one. Might be better for that functionality to go in Console rather than progress.\r\n\r\nre logging, I had thought that would be achieved by sharing the same Console instance. You can set the console on both Progress and the RichHandler.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/643627979","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-643627979","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":643627979,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzYyNzk3OQ==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-06-13T14:02:10Z","updated_at":"2020-06-13T14:02:10Z","author_association":"OWNER","body":"For those interested I have a [branch](https://github.com/willmcgugan/rich/tree/transparent-progress) which addresses these issue with the progress display.\r\n\r\nWith these changes there should be no need to use `progress.print`, as you can print directly to a shared Console. Since Progress and RichHandler will use the same global Console object by default, it means the logging output will be rendered above the progress bars.\r\n\r\nI've also added ``redirect_stdout`` and ``redirect_stderr`` options to Progress, as @calve suggested, which is enabled by default.\r\n\r\nStill a work in progress, early feedback would be good.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/643830599","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-643830599","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":643830599,"node_id":"MDEyOklzc3VlQ29tbWVudDY0MzgzMDU5OQ==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-06-14T22:29:29Z","updated_at":"2020-06-14T22:29:29Z","author_association":"OWNER","body":"Progress bar updated in 2.2.0","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/643986915","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-643986915","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":643986915,"node_id":"MDEyOklzc3VlQ29tbWVudDY0Mzk4NjkxNQ==","user":{"login":"calve","id":4311079,"node_id":"MDQ6VXNlcjQzMTEwNzk=","avatar_url":"https://avatars2.githubusercontent.com/u/4311079?v=4","gravatar_id":"","url":"https://api.github.com/users/calve","html_url":"https://github.com/calve","followers_url":"https://api.github.com/users/calve/followers","following_url":"https://api.github.com/users/calve/following{/other_user}","gists_url":"https://api.github.com/users/calve/gists{/gist_id}","starred_url":"https://api.github.com/users/calve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calve/subscriptions","organizations_url":"https://api.github.com/users/calve/orgs","repos_url":"https://api.github.com/users/calve/repos","events_url":"https://api.github.com/users/calve/events{/privacy}","received_events_url":"https://api.github.com/users/calve/received_events","type":"User","site_admin":false},"created_at":"2020-06-15T08:35:09Z","updated_at":"2020-06-15T08:35:09Z","author_association":"CONTRIBUTOR","body":"Much thanks, I'll test this release in the coming week","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/644127207","html_url":"https://github.com/willmcgugan/rich/issues/87#issuecomment-644127207","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/87","id":644127207,"node_id":"MDEyOklzc3VlQ29tbWVudDY0NDEyNzIwNw==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-06-15T13:14:06Z","updated_at":"2020-06-15T13:14:06Z","author_association":"OWNER","body":"Closing for now, works for me. Feel free to re-open if you find any problems with it.","performed_via_github_app":null}]