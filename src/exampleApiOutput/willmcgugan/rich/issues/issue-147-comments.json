[{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/655781066","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-655781066","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":655781066,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NTc4MTA2Ng==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-07-08T22:02:33Z","updated_at":"2020-07-08T22:02:33Z","author_association":"OWNER","body":"That's a reasonable solution. I do it the same way in tests.\r\n\r\nA method wouldn't capture all use cases as rendering with rich isn't as simple as `__str__`. You would need to know the width for example, in your code above you may get a different result with a differently sized terminal. It would also generate different output for each platform.\r\n\r\nIf you need that functionality I'd suggest defining a `render_to_str` function somewhere.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/655786888","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-655786888","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":655786888,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NTc4Njg4OA==","user":{"login":"Congee","id":2083950,"node_id":"MDQ6VXNlcjIwODM5NTA=","avatar_url":"https://avatars1.githubusercontent.com/u/2083950?v=4","gravatar_id":"","url":"https://api.github.com/users/Congee","html_url":"https://github.com/Congee","followers_url":"https://api.github.com/users/Congee/followers","following_url":"https://api.github.com/users/Congee/following{/other_user}","gists_url":"https://api.github.com/users/Congee/gists{/gist_id}","starred_url":"https://api.github.com/users/Congee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Congee/subscriptions","organizations_url":"https://api.github.com/users/Congee/orgs","repos_url":"https://api.github.com/users/Congee/repos","events_url":"https://api.github.com/users/Congee/events{/privacy}","received_events_url":"https://api.github.com/users/Congee/received_events","type":"User","site_admin":false},"created_at":"2020-07-08T22:18:21Z","updated_at":"2020-07-08T22:18:21Z","author_association":"NONE","body":"Hmmm, thank you for prompt reply. I did define a helper function like `render_to_str`.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/656345857","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-656345857","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":656345857,"node_id":"MDEyOklzc3VlQ29tbWVudDY1NjM0NTg1Nw==","user":{"login":"Congee","id":2083950,"node_id":"MDQ6VXNlcjIwODM5NTA=","avatar_url":"https://avatars1.githubusercontent.com/u/2083950?v=4","gravatar_id":"","url":"https://api.github.com/users/Congee","html_url":"https://github.com/Congee","followers_url":"https://api.github.com/users/Congee/followers","following_url":"https://api.github.com/users/Congee/following{/other_user}","gists_url":"https://api.github.com/users/Congee/gists{/gist_id}","starred_url":"https://api.github.com/users/Congee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Congee/subscriptions","organizations_url":"https://api.github.com/users/Congee/orgs","repos_url":"https://api.github.com/users/Congee/repos","events_url":"https://api.github.com/users/Congee/events{/privacy}","received_events_url":"https://api.github.com/users/Congee/received_events","type":"User","site_admin":false},"created_at":"2020-07-09T20:53:16Z","updated_at":"2020-07-09T20:53:42Z","author_association":"NONE","body":"FWIW, `io.StringIO().isatty() is False`. One might want `Console(file=io.StringIO(), force_terminal=True)`","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/688286537","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-688286537","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":688286537,"node_id":"MDEyOklzc3VlQ29tbWVudDY4ODI4NjUzNw==","user":{"login":"Honno","id":8246949,"node_id":"MDQ6VXNlcjgyNDY5NDk=","avatar_url":"https://avatars0.githubusercontent.com/u/8246949?v=4","gravatar_id":"","url":"https://api.github.com/users/Honno","html_url":"https://github.com/Honno","followers_url":"https://api.github.com/users/Honno/followers","following_url":"https://api.github.com/users/Honno/following{/other_user}","gists_url":"https://api.github.com/users/Honno/gists{/gist_id}","starred_url":"https://api.github.com/users/Honno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Honno/subscriptions","organizations_url":"https://api.github.com/users/Honno/orgs","repos_url":"https://api.github.com/users/Honno/repos","events_url":"https://api.github.com/users/Honno/events{/privacy}","received_events_url":"https://api.github.com/users/Honno/received_events","type":"User","site_admin":false},"created_at":"2020-09-07T12:14:37Z","updated_at":"2020-09-07T13:09:20Z","author_association":"CONTRIBUTOR","body":"For reference to futurelings,  if you have objects which you want to be rendered both by a command-line interface AND in Jupyter environments, you do NOT want to do the following:\r\n```python\r\nclass MyClass():\r\n    ...\r\n    def __rich__(self):   # or __rich_console__\r\n        ...\r\n\r\n    def __str__(self):\r\n        buf = StringIO()\r\n        console = Console(file=buf)\r\n        console.print(self)\r\n\r\n        return buf.getvalue()\r\n```\r\nThis will work fine for your CLI as `console.print(instance_of_MyClass)` will only care about the `__rich__`/`__rich_console__` method.\r\n\r\nHowever if you `print(instance_of_MyClass)` (Python's top-level `print` statement) in a notebook, the `console` instantiation inside `__str__` will actually detect that it is inside a Jupyter environment, and subsequently `console.print(self)` will RENDER (not print!) to Jupyter. `buf` won't get anything, so the `buf.getvalue()` being returned will result in Jupyter's output being empty.\r\n\r\nI do not believe there is a simple way to disable this behaviour in `Console` instances (I dunno if it would be a bad idea for Rich to support such use cases).\r\n\r\n---\r\n\r\nI'm just designating a separate method `pprint()` so notebook users can nicely render what the CLI would show.\r\n\r\n```python\r\nfrom my_package import console  # console is an instance of rich.Console\r\n...\r\nclass MyClass():\r\n    ...\r\n    def __rich__(self):\r\n        ...\r\n\r\n    def pprint(self):\r\n        console.print(self)\r\n```","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/688297001","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-688297001","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":688297001,"node_id":"MDEyOklzc3VlQ29tbWVudDY4ODI5NzAwMQ==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-09-07T12:36:36Z","updated_at":"2020-09-07T12:36:36Z","author_association":"OWNER","body":"Perhaps the `force_jupyter` parameter in the Console constructor should have three states; `False` to disable jupyter, `True` to enable it, and a default of `None` to auto detect.\r\n\r\nThat way you could `force_jupyter=False` in `__str__` so you always get a string.","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/688442639","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-688442639","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":688442639,"node_id":"MDEyOklzc3VlQ29tbWVudDY4ODQ0MjYzOQ==","user":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"created_at":"2020-09-07T17:12:18Z","updated_at":"2020-09-07T17:12:18Z","author_association":"OWNER","body":"The three-state `force_jupyter` is in 6.1.0","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/comments/688466302","html_url":"https://github.com/willmcgugan/rich/issues/147#issuecomment-688466302","issue_url":"https://api.github.com/repos/willmcgugan/rich/issues/147","id":688466302,"node_id":"MDEyOklzc3VlQ29tbWVudDY4ODQ2NjMwMg==","user":{"login":"Honno","id":8246949,"node_id":"MDQ6VXNlcjgyNDY5NDk=","avatar_url":"https://avatars0.githubusercontent.com/u/8246949?v=4","gravatar_id":"","url":"https://api.github.com/users/Honno","html_url":"https://github.com/Honno","followers_url":"https://api.github.com/users/Honno/followers","following_url":"https://api.github.com/users/Honno/following{/other_user}","gists_url":"https://api.github.com/users/Honno/gists{/gist_id}","starred_url":"https://api.github.com/users/Honno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Honno/subscriptions","organizations_url":"https://api.github.com/users/Honno/orgs","repos_url":"https://api.github.com/users/Honno/repos","events_url":"https://api.github.com/users/Honno/events{/privacy}","received_events_url":"https://api.github.com/users/Honno/received_events","type":"User","site_admin":false},"created_at":"2020-09-07T18:28:09Z","updated_at":"2020-09-07T18:28:56Z","author_association":"CONTRIBUTOR","body":"Awesome, thanks so much!\r\n\r\n(I had actually encountered a problem with the notebook hosting platform Kaggle today, where Jupyter-rendered text is printed white... on a white background! So to use my library on it nicely, I really did need this behaviour in the end.)\r\n\r\nFor future reference, the below worked well for me.\r\n\r\n```python\r\nfrom io import StringIO\r\n\r\nfrom rich.console import Console\r\n...\r\nclass MyClass():\r\n    ...\r\n    def __rich__(self):   # or __rich_console__\r\n        ...\r\n\r\n    def __str__(self):\r\n        buf = StringIO()\r\n        console = Console(file=buf, force_jupyter=False)\r\n        console.print(self)\r\n\r\n        return buf.getvalue()\r\n```","performed_via_github_app":null}]