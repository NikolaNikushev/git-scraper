{"url":"https://api.github.com/repos/willmcgugan/rich/issues/93","repository_url":"https://api.github.com/repos/willmcgugan/rich","labels_url":"https://api.github.com/repos/willmcgugan/rich/issues/93/labels{/name}","comments_url":"https://api.github.com/repos/willmcgugan/rich/issues/93/comments","events_url":"https://api.github.com/repos/willmcgugan/rich/issues/93/events","html_url":"https://github.com/willmcgugan/rich/pull/93","id":624889295,"node_id":"MDExOlB1bGxSZXF1ZXN0NDIzMjEwNDU0","number":93,"title":"Allow for easier subclassing","user":{"login":"Hultner","id":2669034,"node_id":"MDQ6VXNlcjI2NjkwMzQ=","avatar_url":"https://avatars2.githubusercontent.com/u/2669034?v=4","gravatar_id":"","url":"https://api.github.com/users/Hultner","html_url":"https://github.com/Hultner","followers_url":"https://api.github.com/users/Hultner/followers","following_url":"https://api.github.com/users/Hultner/following{/other_user}","gists_url":"https://api.github.com/users/Hultner/gists{/gist_id}","starred_url":"https://api.github.com/users/Hultner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Hultner/subscriptions","organizations_url":"https://api.github.com/users/Hultner/orgs","repos_url":"https://api.github.com/users/Hultner/repos","events_url":"https://api.github.com/users/Hultner/events{/privacy}","received_events_url":"https://api.github.com/users/Hultner/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2020-05-26T13:35:52Z","updated_at":"2020-05-26T14:52:20Z","closed_at":"2020-05-26T14:52:20Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/willmcgugan/rich/pulls/93","html_url":"https://github.com/willmcgugan/rich/pull/93","diff_url":"https://github.com/willmcgugan/rich/pull/93.diff","patch_url":"https://github.com/willmcgugan/rich/pull/93.patch"},"body":"## Type of changes\r\nAllow for DRY:er subclasses by allowing us to reuse `Heading.create`\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [x] Other\r\n\r\n## Checklist\r\n\r\n- [x] I've run the latest [black](https://github.com/ambv/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n   - There's no CONTRIBUTORS.md file to update, I did update the CHANGELOG.md\r\n- [ ] I've added tests for new code.\r\n   - This is a tiny change mainly changing one function to adhere to the other functions. Since you are currently not testing subclassing for the other classes I didn't add anyone here.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nPlease describe your changes here. If this fixes a bug, please link to the issue, if possible.\r\n\r\nThe `markdown.Headings` class unlike all other `MarkdownElement` subclasses were using an explicit self reference in it's factory/create-method. This forced us to overload the create-method every time subclassing Heading so that we could reference the new subclass instead (or as I used, a self reference). By using the implicit `cls`-reference instead we don't need to overload the create method making code inheriting Heading DRY:er and less error-prone if create-method internals is changed in the future. All the other markdown element classes already uses this approach.\r\n\r\n**Example of how a Heading subclass could look today:**\r\n```python\r\nclass SubtleHeading(Heading):\r\n    @classmethod\r\n    def create(cls, markdown: \"Markdown\", node: Any) -> \"Heading\":\r\n        heading = cls(node.level)\r\n        return heading\r\n\r\n    def __init__(self, level):\r\n        # Defering all headings by one level to avoid the borderd box for H1, hence level 2 is max\r\n        super().__init__(level + 1)\r\n\r\n    def __rich_console__(\r\n        self, console: Console, options: ConsoleOptions\r\n    ) -> RenderResult:\r\n        # Overwriting this to avoid the center-alginment\r\n        # h1 is unused since we defer all levels by one level\r\n        text = self.text\r\n        # Styled text for h2 and beyond\r\n        if self.level == 2:\r\n            yield Text(\"\\n\")\r\n        yield text\r\n```\r\n\r\n**Same change after this PR:**\r\n```python\r\nclass SubtleHeading(Heading):\r\n    def __init__(self, level):\r\n        # Defering all headings by one level to avoid the borderd box for H1, hence level 2 is max\r\n        super().__init__(level + 1)\r\n\r\n    def __rich_console__(\r\n        self, console: Console, options: ConsoleOptions\r\n    ) -> RenderResult:\r\n        # Overwriting this to avoid the center-alginment\r\n        # h1 is unused since we defer all levels by one level\r\n        text = self.text\r\n        # Styled text for h2 and beyond\r\n        if self.level == 2:\r\n            yield Text(\"\\n\")\r\n        yield text\r\n```\r\n\r\nFor additional background, I discovered this as a follow up to this [twitter thread](https://twitter.com/ahultner/status/1265253708499124225).\r\n","closed_by":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}