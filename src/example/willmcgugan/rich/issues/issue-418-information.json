{"url":"https://api.github.com/repos/willmcgugan/rich/issues/418","repository_url":"https://api.github.com/repos/willmcgugan/rich","labels_url":"https://api.github.com/repos/willmcgugan/rich/issues/418/labels{/name}","comments_url":"https://api.github.com/repos/willmcgugan/rich/issues/418/comments","events_url":"https://api.github.com/repos/willmcgugan/rich/issues/418/events","html_url":"https://github.com/willmcgugan/rich/issues/418","id":733274569,"node_id":"MDU6SXNzdWU3MzMyNzQ1Njk=","number":418,"title":"[REQUEST] Table Sections","user":{"login":"jorisroovers","id":575086,"node_id":"MDQ6VXNlcjU3NTA4Ng==","avatar_url":"https://avatars3.githubusercontent.com/u/575086?v=4","gravatar_id":"","url":"https://api.github.com/users/jorisroovers","html_url":"https://github.com/jorisroovers","followers_url":"https://api.github.com/users/jorisroovers/followers","following_url":"https://api.github.com/users/jorisroovers/following{/other_user}","gists_url":"https://api.github.com/users/jorisroovers/gists{/gist_id}","starred_url":"https://api.github.com/users/jorisroovers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jorisroovers/subscriptions","organizations_url":"https://api.github.com/users/jorisroovers/orgs","repos_url":"https://api.github.com/users/jorisroovers/repos","events_url":"https://api.github.com/users/jorisroovers/events{/privacy}","received_events_url":"https://api.github.com/users/jorisroovers/received_events","type":"User","site_admin":false},"labels":[{"id":1668492275,"node_id":"MDU6TGFiZWwxNjY4NDkyMjc1","url":"https://api.github.com/repos/willmcgugan/rich/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-10-30T15:24:20Z","updated_at":"2020-12-12T12:34:55Z","closed_at":"2020-11-30T16:06:50Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, thanks for creating rich. I've used it for the first time just now and I like it a lot!\r\n\r\nI don't think this exists, I spend ~30 min going through the docs and issues first.\r\nI thought #261 was the same, but that ended being about enabling demarcation between *all* rows, not selectively.\r\n\r\n**How would you improve Rich?**\r\n\r\nI think it would be useful to be able to add \"line rows\" to tables in order to create sections in tables.\r\nLike this:\r\n```sh\r\n┏━━━━━━━━┳━━━━━━┓\r\n┃ Team   ┃ Task ┃\r\n┡━━━━━━━━╇━━━━━━┩\r\n│ Team A │ Foo  │\r\n│ Team A │ Bar  │\r\n┡━━━━━━━━╇━━━━━━┩\r\n│ Team B │ Foo  │\r\n│ Team B │ Bar  │\r\n│ Team B │ Bar  │\r\n┡━━━━━━━━╇━━━━━━┩\r\n│ Team C │ Hur  │\r\n│ Team C │ Dur  │\r\n│ Team C │ Dur  │\r\n│ Team C │ Dur  │\r\n└────────┴──────┘\r\n```\r\n\r\nMy understanding is that rich currently only allows you to add such lines to either all rows, as well as\r\nselectively for the footer and header row, but not to arbitrary rows.\r\nI've tried adding a `Rule` to every column of the row, but that doesn't give the same visual result.\r\n\r\nThere's probably a few different ways this could work:\r\n\r\n1. Adding a new `TableLine` object as a row to the table:\r\n```python\r\n# create table, add columns: skipped for brevity\r\ntable.add_row(\"Team A\", \"Foo\")\r\ntable.add_row(TableLine())\r\ntable.add_row(\"Team B\", \"Bar\")\r\n```\r\nMaybe `TableLine` isn't the best name, but I think the idea is clear :-)\r\n\r\n2. Add a optional `show_bottom_row`/`show_top_row` styling arguments to `add_row`\r\n\r\n```python\r\n# create table, add columns: skipped for brevity\r\ntable.add_row(\"Team A\", \"Foo\", show_bottom_line=True)\r\ntable.add_row(\"Team B\", \"Bar\")\r\ntable.add_row(\"Team C\", \"Bar\", show_top_line=True)\r\n```\r\n\r\nA bit more generically, this could also work by passing a `TableRowStyle` (extends `rich.Style`) that\r\n\"understands\" table cell style language.\r\n\r\n```python\r\n# create table, add columns: skipped for brevity\r\ntable.add_row(\"Team A\", \"Foo\", style=TableRowStyle(show_bottom_line=True))\r\ntable.add_row(\"Team B\", \"Bar\")\r\ntable.add_row(\"Team C\", \"Bar\", style=TableRowStyle(show_top_line=True))\r\n```\r\n\r\n\r\n4. Add a `TableSection` object that can be stylized independently\r\n```python\r\nsection1 = TableSection(show_lines=True)\r\nsection1.add_row(\"Team A\", \"Foo\")\r\nsection1.add_row(\"Team A\", \"Bar\")\r\ntable.add_section(section1)\r\n\r\nsection2 = TableSection(show_lines=True)\r\nsection2.add_row(\"Team B\", \"Foo\")\r\nsection2.add_row(\"Team B\", \"Bar\")\r\ntable.add_section(section1)\r\n```\r\nThis approach is going a bit beyond my specific request and would need more thought. I just included it\r\nas it introduces the concept of table sections as a proper construct which might be useful for other use-cases.\r\n\r\n\r\n**What problem does it solved for you?**\r\nIn my case, I was trying visually split weeks from each-other in a table. Empty rows work, but I think lines might be\r\nmore visually pleasing.\r\n\r\nThanks again for creating rich and taking the time to read this far :)","closed_by":{"login":"willmcgugan","id":554369,"node_id":"MDQ6VXNlcjU1NDM2OQ==","avatar_url":"https://avatars3.githubusercontent.com/u/554369?v=4","gravatar_id":"","url":"https://api.github.com/users/willmcgugan","html_url":"https://github.com/willmcgugan","followers_url":"https://api.github.com/users/willmcgugan/followers","following_url":"https://api.github.com/users/willmcgugan/following{/other_user}","gists_url":"https://api.github.com/users/willmcgugan/gists{/gist_id}","starred_url":"https://api.github.com/users/willmcgugan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willmcgugan/subscriptions","organizations_url":"https://api.github.com/users/willmcgugan/orgs","repos_url":"https://api.github.com/users/willmcgugan/repos","events_url":"https://api.github.com/users/willmcgugan/events{/privacy}","received_events_url":"https://api.github.com/users/willmcgugan/received_events","type":"User","site_admin":false},"performed_via_github_app":null}