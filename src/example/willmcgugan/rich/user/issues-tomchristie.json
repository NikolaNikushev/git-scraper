[{"url":"https://api.github.com/repos/willmcgugan/rich/issues/286","repository_url":"https://api.github.com/repos/willmcgugan/rich","labels_url":"https://api.github.com/repos/willmcgugan/rich/issues/286/labels{/name}","comments_url":"https://api.github.com/repos/willmcgugan/rich/issues/286/comments","events_url":"https://api.github.com/repos/willmcgugan/rich/issues/286/events","html_url":"https://github.com/willmcgugan/rich/pull/286","id":702831841,"node_id":"MDExOlB1bGxSZXF1ZXN0NDg4MDQ0Njg4","number":286,"title":"Bump up the total number of `ProgressSample` items.","user":{"login":"tomchristie","id":647359,"node_id":"MDQ6VXNlcjY0NzM1OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/647359?v=4","gravatar_id":"","url":"https://api.github.com/users/tomchristie","html_url":"https://github.com/tomchristie","followers_url":"https://api.github.com/users/tomchristie/followers","following_url":"https://api.github.com/users/tomchristie/following{/other_user}","gists_url":"https://api.github.com/users/tomchristie/gists{/gist_id}","starred_url":"https://api.github.com/users/tomchristie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomchristie/subscriptions","organizations_url":"https://api.github.com/users/tomchristie/orgs","repos_url":"https://api.github.com/users/tomchristie/repos","events_url":"https://api.github.com/users/tomchristie/events{/privacy}","received_events_url":"https://api.github.com/users/tomchristie/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2020-09-16T14:49:31Z","updated_at":"2020-09-16T15:27:14Z","closed_at":"2020-09-16T15:27:14Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"pull_request":{"url":"https://api.github.com/repos/willmcgugan/rich/pulls/286","html_url":"https://github.com/willmcgugan/rich/pull/286","diff_url":"https://github.com/willmcgugan/rich/pull/286.diff","patch_url":"https://github.com/willmcgugan/rich/pull/286.patch"},"body":"When working with `rich` download progress bars with `httpx` we were finding the transfer speed jumping around all over the place.\r\n\r\nFor example, this snippet...\r\n\r\n```python\r\nimport tempfile\r\nimport httpx\r\nimport rich.progress\r\n\r\nwith tempfile.NamedTemporaryFile() as download_file:\r\n    url = \"https://speed.hetzner.de/100MB.bin\"\r\n    with httpx.stream(\"GET\", url) as response:\r\n        total = int(response.headers[\"Content-Length\"])\r\n\r\n        with rich.progress.Progress(\r\n            \"[progress.percentage]{task.percentage:>3.0f}%\",\r\n            rich.progress.BarColumn(bar_width=None),\r\n            rich.progress.DownloadColumn(),\r\n            rich.progress.TransferSpeedColumn(),\r\n        ) as progress:\r\n            download_task = progress.add_task(\"Download\", total=total)\r\n            for chunk in response.iter_bytes():\r\n                download_file.write(chunk)\r\n                progress.update(download_task, completed=response.num_bytes_downloaded)\r\n```\r\n\r\nWas resulting in this...\r\n\r\n![rich-progress](https://user-images.githubusercontent.com/647359/93353577-00956500-f834-11ea-8a3b-18b3f4108206.gif)\r\n\r\nHave now narrowed down the cause:\r\n\r\nWhen calculating transfer speeds, `rich` stores a ProgressSample every time the progress is updated.\r\nIt then averages out the transfer speed based on the progress samples.\r\n\r\nThe maximum window size of samples that are used is currently set to 30 seconds, or 20 samples, whichever is smaller.\r\nThat \"maximum of 20 samples\" is actually pretty small. (For example reading chunks of 16KB at a download speed of 16MB/s will result in 1000 samples/second)\r\n\r\nThis PR changes that window size to be 30 seconds, or 1000 samples, whichever is smaller.\r\n\r\n## Type of changes\r\n\r\n- [ ] Bug fix\r\n- [ ] New feature\r\n- [ ] Documentation / docstrings\r\n- [ ] Tests\r\n- [x] Other - UX\r\n\r\n## Checklist\r\n\r\n- [ ] I've run the latest [black](https://github.com/psf/black) with default args on new code.\r\n- [ ] I've updated CHANGELOG.md and CONTRIBUTORS.md where appropriate.\r\n- [ ] I've added tests for new code.\r\n- [x] I accept that @willmcgugan may be pedantic in the code review.\r\n\r\n## Description\r\n\r\nPlease describe your changes here. If this fixes a bug, please link to the issue, if possible.\r\n","performed_via_github_app":null},{"url":"https://api.github.com/repos/willmcgugan/rich/issues/284","repository_url":"https://api.github.com/repos/willmcgugan/rich","labels_url":"https://api.github.com/repos/willmcgugan/rich/issues/284/labels{/name}","comments_url":"https://api.github.com/repos/willmcgugan/rich/issues/284/comments","events_url":"https://api.github.com/repos/willmcgugan/rich/issues/284/events","html_url":"https://github.com/willmcgugan/rich/issues/284","id":702209094,"node_id":"MDU6SXNzdWU3MDIyMDkwOTQ=","number":284,"title":"[REQUEST] Syntax highlighting using standard ANSI colours.","user":{"login":"tomchristie","id":647359,"node_id":"MDQ6VXNlcjY0NzM1OQ==","avatar_url":"https://avatars2.githubusercontent.com/u/647359?v=4","gravatar_id":"","url":"https://api.github.com/users/tomchristie","html_url":"https://github.com/tomchristie","followers_url":"https://api.github.com/users/tomchristie/followers","following_url":"https://api.github.com/users/tomchristie/following{/other_user}","gists_url":"https://api.github.com/users/tomchristie/gists{/gist_id}","starred_url":"https://api.github.com/users/tomchristie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tomchristie/subscriptions","organizations_url":"https://api.github.com/users/tomchristie/orgs","repos_url":"https://api.github.com/users/tomchristie/repos","events_url":"https://api.github.com/users/tomchristie/events{/privacy}","received_events_url":"https://api.github.com/users/tomchristie/received_events","type":"User","site_admin":false},"labels":[{"id":1809645463,"node_id":"MDU6TGFiZWwxODA5NjQ1NDYz","url":"https://api.github.com/repos/willmcgugan/rich/labels/accepted","name":"accepted","color":"c5def5","default":false,"description":"Task was accepted"},{"id":1668492275,"node_id":"MDU6TGFiZWwxNjY4NDkyMjc1","url":"https://api.github.com/repos/willmcgugan/rich/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2020-09-15T19:46:10Z","updated_at":"2020-09-19T09:38:37Z","closed_at":"2020-09-19T09:37:42Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"I'm working on [an HTTP command line client using rich](https://github.com/encode/httpx/pull/1212), which is looking great, but I'm having a few problems getting the syntax highlighting just right.\r\n\r\nThe problem is that I really want to use the whatever the existing console background colour is, but also want a theme that works well on both light & dark consoles, so need to also be able to use the default foreground text colour for at least part of the theme.\r\n\r\nAn example of a tool that gets this right is `httpie` - https://github.com/httpie/httpie\r\n\r\nTheir default theme is \"auto\" [which uses pygment's `TerminalFormatter`](https://github.com/httpie/httpie/blob/master/httpie/output/formatters/colors.py), and which results in a theme that has a different foreground text depending on the terminal style.\r\n\r\n![Screen Shot 2020-09-15 at 20 37 51](https://user-images.githubusercontent.com/647359/93256638-83b2ae80-f793-11ea-9116-481d08b154c6.png)\r\n\r\n![Screen Shot 2020-09-15 at 20 38 00](https://user-images.githubusercontent.com/647359/93256644-87463580-f793-11ea-8238-9ca11e568f7e.png)\r\n\r\nI don't think I'm currently able to replicate something similar in rich.\r\n\r\nSimilarly, for cases where a user *does* explicitly select a theme, I'd ideally still like to use the terminal background, rather than painting over it. I can do this part, but only by digging into private API...\r\n\r\n```python\r\nsyntax._background_color = None\r\nsyntax._pygments_style_class.background_color = None\r\n```\r\n\r\n*Ideally* I'd love to find a good way to get two things out of this...\r\n\r\n* The ability to use an \"auto\" theme, that uses standard ANSI colours, and matches the terminal theme.\r\n* Some public API for removing any explicit background colour on syntax highlighting, so only the text is colourised.","performed_via_github_app":null}]